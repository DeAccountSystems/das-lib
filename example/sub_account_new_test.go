package example

import (
	"context"
	"fmt"
	"github.com/dotbitHQ/das-lib/common"
	"github.com/dotbitHQ/das-lib/witness"
	"github.com/nervosnetwork/ckb-sdk-go/rpc"
	"github.com/nervosnetwork/ckb-sdk-go/types"
	"testing"
	"time"
)

func TestSubAccountMintSign(t *testing.T) {
	sams := witness.SubAccountMintSign{
		Version:            witness.SubAccountMintSignVersion1,
		Signature:          []byte{},
		ExpiredAt:          uint64(time.Now().Unix()),
		AccountListSmtRoot: []byte{},
	}
	dataBys := sams.GenSubAccountMintSignBytes()

	var sanb witness.SubAccountNewBuilder
	res, _ := sanb.ConvertSubAccountMintSignFromBytes(dataBys)
	fmt.Println(res.Version, res.ExpiredAt, res.Signature, res.AccountListSmtRoot)
}

func TestSubAccountNew(t *testing.T) {
	san := witness.SubAccountNew{
		Version:   0,
		Signature: nil,
		SignRole:  nil,
		NewRoot:   nil,
		Proof:     nil,
		Action:    "",
		SubAccountData: &witness.SubAccountData{
			Lock: &types.Script{
				CodeHash: types.Hash{},
				HashType: "",
				Args:     nil,
			},
			AccountId:            common.Bytes2Hex(common.GetAccountIdByAccount("aaa.bit")),
			AccountCharSet:       nil,
			Suffix:               "",
			RegisteredAt:         0,
			ExpiredAt:            0,
			Status:               0,
			Records:              nil,
			Nonce:                0,
			EnableSubAccount:     0,
			RenewSubAccountPrice: 0,
		},
		EditKey:      "",
		EditValue:    nil,
		EditLockArgs: nil,
		EditRecords:  nil,
		PrevRoot:     nil,
		CurrentRoot:  nil,
	}
	dataBys, err := san.GenSubAccountNewBytes()
	if err != nil {
		t.Fatal(err)
	}
	fmt.Println(dataBys)

	var sanb witness.SubAccountNewBuilder
	subAcc, err := sanb.ConvertSubAccountNewFromBytes(dataBys)
	if err != nil {
		t.Fatal(err)
	}
	fmt.Println(subAcc.SubAccountData.AccountId, subAcc.Version)

	subAcc.Version = witness.SubAccountNewVersion2
	dataBys, err = subAcc.GenSubAccountNewBytes()
	fmt.Println(dataBys)
	subAcc, err = sanb.ConvertSubAccountNewFromBytes(dataBys)
	if err != nil {
		t.Fatal(err)
	}
	fmt.Println(subAcc.SubAccountData.AccountId, subAcc.Version)
}

func TestSubAccountNewMapFromTx(t *testing.T) {
	dc, err := getNewDasCoreMainNet()
	if err != nil {
		t.Fatal(err)
	}
	hash := "0x5730e2cac722d1d66a40f7aa98d8e0c8388d65c7a19f100f3ad8ebb43dc3828e-0"
	if res, err := dc.Client().GetTransaction(context.Background(), types.HexToHash(hash)); err != nil {
		t.Fatal(err)
	} else {
		var sanb witness.SubAccountNewBuilder
		resMap, err := sanb.SubAccountNewMapFromTx(res.Transaction)
		if err != nil {
			t.Fatal(err)
		}
		for k, v := range resMap {
			bys, _ := v.CurrentSubAccountData.ToH256()
			fmt.Println(k, common.Bytes2Hex(bys))
			fmt.Println(k, v.SubAccountData.AccountId, v.EditKey, v.EditRecords, v.EditLockArgs)
		}
	}

}

func TestUpdateSubAccountTx(t *testing.T) {
	str := `{"version":"0x0","cell_deps":[{"out_point":{"tx_hash":"0xcf4745a9d4f9e9438aad3884577216ffaa4c0e0bcbac39baef2dd7ed45a38f67","index":"0x0"},"dep_type":"code"},{"out_point":{"tx_hash":"0x12fceb12d070d519c035d4b5893675a2043e0f96606d9aa9e156d73f19ec9af1","index":"0x0"},"dep_type":"code"},{"out_point":{"tx_hash":"0xd1e83290fb5e50edba9063988f48f139ec671466867289374c9c5ce5a7e45893","index":"0x0"},"dep_type":"code"},{"out_point":{"tx_hash":"0x64a8d7bf89b465b2e601954c0e8ad0ec57ef4632221571319920a418a8f6cbfd","index":"0x0"},"dep_type":"code"},{"out_point":{"tx_hash":"0x39c39f5e0f96ca853f04b3c062785d0cfd2c8706f1a25942838c1f7f3c978356","index":"0x1"},"dep_type":"code"},{"out_point":{"tx_hash":"0x8db4070c267a15c21f12c40d51f3f9c28cb68b9f51f027d428418bcab60b1fed","index":"0x1"},"dep_type":"code"},{"out_point":{"tx_hash":"0x10b000eb473abf0847655a02ad8384ea808e8f9b88a3240f695475984f7e674d","index":"0x0"},"dep_type":"code"},{"out_point":{"tx_hash":"0xb1e95aa34d8a3f27207868d88751757b7b7607c7430a083d982195179d8bd440","index":"0x0"},"dep_type":"code"},{"out_point":{"tx_hash":"0x9e2272d2ec864b2f22ff74dd19c12ecc82718ec0864c37324d31a5b09dd64a00","index":"0x0"},"dep_type":"code"},{"out_point":{"tx_hash":"0xa706f46e58e355a6d29d7313f548add21b875639ea70605d18f682c1a08740d6","index":"0x0"},"dep_type":"code"},{"out_point":{"tx_hash":"0x8ffa409ba07d74f08f63c03f82b7428d36285fe75b2173fc2476c0f7b80c707a","index":"0x0"},"dep_type":"code"},{"out_point":{"tx_hash":"0x9e0823959e5b76bd010cc503964cced4f8ae84f3b03e94811b083f9765534ff1","index":"0x0"},"dep_type":"code"},{"out_point":{"tx_hash":"0xa918c7abee1a612d3d8222642638ca51ed442c855ed9d11c6b37d9df71aeed06","index":"0x0"},"dep_type":"code"},{"out_point":{"tx_hash":"0x5f1e03c7dc777d3cbec80aec8d3cefbf220ada32de5568155ff2c81acf99cce3","index":"0x0"},"dep_type":"code"},{"out_point":{"tx_hash":"0x243d467d3a0c3355e64a03baab4f4850ebe2133b6ac34586e7f21b2248d997f0","index":"0x0"},"dep_type":"code"},{"out_point":{"tx_hash":"0x4c817bc81165aae004f0961d583492e95759212edaa210afc434766998ce2670","index":"0x0"},"dep_type":"code"},{"out_point":{"tx_hash":"0xf8de3bb47d055cdf460d93a2a6e1b05f7432f9777c8c474abf4eec1d4aee5d37","index":"0x0"},"dep_type":"dep_group"},{"out_point":{"tx_hash":"0xa7ff448225fc131d657af882a3f97a8219be230d7e25d070a9282de89302c640","index":"0x0"},"dep_type":"code"},{"out_point":{"tx_hash":"0xee54a7f6504e54d287efdbc86e3d220cbd13c66a10c207768397ae4d5daaa72a","index":"0x0"},"dep_type":"code"}],"header_deps":[],"inputs":[{"since":"0x0","previous_output":{"tx_hash":"0xdc85e488f3f2d53a3dafe590ed1b0773c9a745172a7ba2f1c4f95e94d4b7e6ef","index":"0x0"}},{"since":"0x0","previous_output":{"tx_hash":"0xfeaca60385002d72d9fb238940fe945c9ea9f2dba24936a79ed198c867a3f213","index":"0x2"}}],"outputs":[{"capacity":"0x54905e94f","lock":{"code_hash":"0xf1ef61b6977508d9ec56fe43399a01e576086a76cf0f7c687d1418335e8c401f","hash_type":"type","args":"0x"},"type":{"code_hash":"0x8bb0413701cdd2e3a661cc8914e6790e16d619ce674930671e695807274bd14c","hash_type":"type","args":"0x64331471e7f3a760b8caf97811c4cb80565e76ff"}},{"capacity":"0x2e85005e40","lock":{"code_hash":"0x4ff58f2c76b4ac26fdf675aa82541e02e4cf896279c6d6982d17b959788b2f0c","hash_type":"type","args":"0x"},"type":{"code_hash":"0x4ff58f2c76b4ac26fdf675aa82541e02e4cf896279c6d6982d17b959788b2f0c","hash_type":"type","args":"0x"}}],"outputs_data":["0x9c7abd4c74844452e5c436fe3f4e14100178564a9731976578955035f84b33690027b929000000000000000000000000","0x"],"witnesses":["0x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","0x","0x64617300000000260000000c00000022000000120000007570646174655f7375625f6163636f756e7400000000","0x64617309000000040000000100000041000000788f01d1781d9623b5f5fb2d46e1a42427bc2558f9a86cb46d46b283deac7b290f69db18add693b4662846b6514d919f30fd1170209148199d2eabaf98b4c6ca01010000000008000000a9cc91630000000020000000788f01d1781d9623b5f5fb2d46e1a42427bc2558f9a86cb46d46b283deac7b290f69db18add693b4662846b6514d919f30fd1170209148199d2eabaf98b4c6ca01","0x6461730800000004000000020000000600000063726561746500000000000000000800000000000000000000002000000013ac39a68f3053fc16adf5a8883700ac4ec146b645269ffa0589fd6582587826cd0000004c4f9c519cc5735e3b9a08c3ca63fd852a58ac3984125159bb23d9350a7a1a11531934ffd7e856edd2cc15a0869b6fe3d455949a754cac82060000000000000000000000004f015101bb5c44ba510d68622f58954841efde6c9563a725440553fb9101632ff5fd222500000000000000000000000000000000000000200000000000000000000000005101d39ae2a8bccd175ee4b47032e9212a70df4cc04408d96796166e7716eac788ef00000000000000000000000000000000000000000000000000000000000000004f60a6010000a6010000300000008f000000a30000006f01000080010000880100009001000091010000950100009d0100009e0100005f000000100000003000000031000000326df166e3f0a900a0aee043e31a4dea0f01ea3307e6e235f09d1b4220b75fbd012a00000005c9f53b1d85356b60453f867610888d89a0b667ad05c9f53b1d85356b60453f867610888d89a0b667ad327a39873964df443922936e0c16479f6fa705fbcc00000024000000390000004e00000063000000780000008d000000a2000000b7000000150000000c00000010000000020000000100000074150000000c00000010000000020000000100000065150000000c00000010000000020000000100000073150000000c00000010000000020000000100000074150000000c00000010000000010000000100000030150000000c00000010000000010000000100000032150000000c0000001000000001000000010000002d150000000c000000100000000100000001000000310d0000002e32303232313133302e626974dd918863000000005dc56965000000000004000000000000000000000000000000000000000000000000470000004c4f9f519fdbb8bfd1cc7714312b97c2cfa781a37bb25574ff3a277c74269de7aeed22bcbf7cc39589ab548073c6e1b9cbb8bdc9c0415a34780000000000000000000000004f60","0x646173080000000400000002000000060000006372656174650000000000000000080000000000000000000000200000009c7abd4c74844452e5c436fe3f4e14100178564a9731976578955035f84b3369470000004c4f9e5056ac8156f5e79d73491da7bc11b654de4784cafb7185185b38f8baa17697ebb3507811316a60f374dc0d1009a724c0201651365701f5f34365afef0e78ff7352cd4f60a6010000a6010000300000008f000000a30000006f01000080010000880100009001000091010000950100009d0100009e0100005f000000100000003000000031000000326df166e3f0a900a0aee043e31a4dea0f01ea3307e6e235f09d1b4220b75fbd012a00000005c9f53b1d85356b60453f867610888d89a0b667ad05c9f53b1d85356b60453f867610888d89a0b667ad7cc39589ab548073c6e1b9cbb8bdc9c0415a3478cc00000024000000390000004e00000063000000780000008d000000a2000000b7000000150000000c00000010000000020000000100000074150000000c00000010000000020000000100000065150000000c00000010000000020000000100000073150000000c00000010000000020000000100000074150000000c00000010000000010000000100000030150000000c00000010000000010000000100000032150000000c0000001000000001000000010000002d150000000c000000100000000100000001000000320d0000002e32303232313133302e626974dd918863000000005dc56965000000000004000000000000000000000000000000000000000000000000470000004c4f9f519fb203b180652c2c70d881bf8e3d2bf162d52964cd8ef312c19b29a3025948c0c0327a39873964df443922936e0c16479f6fa7057b0000000000000000000000004f60","0x64617301000000c901000010000000c9010000c9010000b901000010000000140000001800000000000000030000009d0100009d0100002c000000400000000c010000140100001c010000240100002c0100002d010000940100009501000064331471e7f3a760b8caf97811c4cb80565e76ffcc00000024000000390000004e00000063000000780000008d000000a2000000b7000000150000000c00000010000000010000000100000032150000000c00000010000000010000000100000030150000000c00000010000000010000000100000032150000000c00000010000000010000000100000032150000000c00000010000000010000000100000031150000000c00000010000000010000000100000031150000000c00000010000000010000000100000033150000000c0000001000000001000000010000003037f48663000000000000000000000000000000000000000000000000000000000067000000080000005f0000001800000023000000290000002d0000005b0000000700000061646472657373020000003630000000002a0000003078633966353362316438353335366236303435336638363736313038383864383961306236363761642c0100000100e1f50500000000","0x646173640000008c0000003c00000040000000480000005000000054000000580000005c000000640000006c000000740000007c0000008000000084000000880000002a000000000edbcb0400000000e1f50500000000008d27002c0100008813000010270000000000001027000000000000102700000000000010270000000000002c0100002c0100002c0100002c010000","0x6461737100000080000000300000003800000040000000480000005000000058000000600000006800000070000000780000007c00000000c817a804000000009435770000000000e1f5050000000000e1f50500000000a086010000000000a086010000000000a086010000000000a086010000000000a0860100000000002c0100002c010000","0x6461736c0000007e030000616464726573732e61646100616464726573732e61746f6d00616464726573732e6176616c616e63686500616464726573732e62636800616464726573732e62736300616464726573732e62737600616464726573732e62746300616464726573732e63656c6f00616464726573732e636b6200616464726573732e6461736800616464726573732e6466696e69747900616464726573732e646f676500616464726573732e646f7400616464726573732e656f7300616464726573732e65746300616464726573732e65746800616464726573732e66696c00616464726573732e666c6f7700616464726573732e6865636f00616464726573732e696f737400616464726573732e696f746100616464726573732e6b736d00616464726573732e6c746300616464726573732e6e65617200616464726573732e706f6c79676f6e00616464726573732e736300616464726573732e736f6c00616464726573732e737461636b7300616464726573732e746572726100616464726573732e74727800616464726573732e76657400616464726573732e78656d00616464726573732e786c6d00616464726573732e786d7200616464726573732e78727000616464726573732e78747a00616464726573732e7a656300616464726573732e7a696c00647765622e6172776561766500647765622e6970667300647765622e69706e7300647765622e726573696c696f00647765622e736b796e65740070726f66696c652e6176617461720070726f66696c652e626568616e63650070726f66696c652e62696c6962696c690070726f66696c652e6465736372697074696f6e0070726f66696c652e646973636f72640070726f66696c652e6472696262626c650070726f66696c652e656d61696c0070726f66696c652e66616365626f6f6b0070726f66696c652e6769746875620070726f66696c652e696e7374616772616d0070726f66696c652e6a696b650070726f66696c652e6c696e6b6564696e0070726f66696c652e6d656469756d0070726f66696c652e6d6972726f720070726f66696c652e6e65787469640070726f66696c652e7265646469740070726f66696c652e74656c656772616d0070726f66696c652e74696b746f6b0070726f66696c652e747769747465720070726f66696c652e776562736974650070726f66696c652e776569626f0070726f66696c652e796f757475626500","0x646173a286010039000000006100620063006400650066006700680069006a006b006c006d006e006f0070007100720073007400750076007700780079007a00","0x646173a18601001b0000000130003100320033003400350036003700380039002d00","0x64617368000000b90200001000000011000000c501000001b401000034000000540000007400000094000000b4000000d4000000f400000014010000340100005401000074010000940100001106d9eaccde0995a7e07e80dd0ce7509f21752538dfdd1ee2526d24574846b10fbff871dd05aee1fda2be38786ad21d52a2765c6025d1ef6927d761d51a3cd14ff58f2c76b4ac26fdf675aa82541e02e4cf896279c6d6982d17b959788b2f0c08d1cdc6ab92d9cabe0096a2c7642f73d0ef1b24c94c43f21c6c3a32ffe0bb5e6c8441233f00741955f65e476721a1a5417997c1e4368801c99c7f617f8b754467d48c0911e406518de2116bd91c6af37c05f1db23334ca829d2af3042427e449438124abdf4cbbfd61065e8b64523172bef5eefe27cb769c40acaf036aa89c200000000000000000000000000000000000000000000000000000000000000001a3f02aa89651a18112f0c21d0ae370a86e13f6a060c378184cd859a7bb6520361711416468fa5211ead5f24c6f3efadfbbc332274c5d40e50c6feadcb5f96068bb0413701cdd2e3a661cc8914e6790e16d619ce674930671e695807274bd14c4fd085557b4ef857b0577723bbf0a2e94081bbe3114de847cd9db01abaeb4f4ef40000001c000000400000006400000088000000ac000000d0000000209b35208da7d20d882f0871f3979c68c53981bcc4caa71274c035449074d08200000000747411fb3914dd7ca5488a0762c6f4e76f56387e83bcbb24e3a01afef1d5a5b4000000000000000000000000000000000000000000000000000000000000000000000000000000008ffa409ba07d74f08f63c03f82b7428d36285fe75b2173fc2476c0f7b80c707a000000009e0823959e5b76bd010cc503964cced4f8ae84f3b03e94811b083f9765534ff100000000a706f46e58e355a6d29d7313f548add21b875639ea70605d18f682c1a08740d600000000"]}`
	tx, err := rpc.TransactionFromString(str)
	if err != nil {
		t.Fatal(err)
	}
	var sanb witness.SubAccountNewBuilder
	res, err := sanb.SubAccountNewMapFromTx(tx)
	if err != nil {
		t.Fatal(err)
	}
	for k, v := range res {
		fmt.Println(k, v.Version, v.Action, v.Account, v.EditKey)
		//fmt.Println(v.EditKey, v.EditRecords)
		//fmt.Println(v.SubAccountData.AccountId, v.SubAccountData.RegisteredAt, common.Bytes2Hex(v.SubAccountData.Lock.Args))
	}

	mintSign, err := sanb.ConvertSubAccountMintSignFromBytes(common.Hex2Bytes("0x64617309000000040000000100000041000000788f01d1781d9623b5f5fb2d46e1a42427bc2558f9a86cb46d46b283deac7b290f69db18add693b4662846b6514d919f30fd1170209148199d2eabaf98b4c6ca01010000000008000000a9cc91630000000020000000788f01d1781d9623b5f5fb2d46e1a42427bc2558f9a86cb46d46b283deac7b290f69db18add693b4662846b6514d919f30fd1170209148199d2eabaf98b4c6ca01")[7:])
	if err != nil {
		t.Fatal(err)
	}
	fmt.Println(mintSign.Version, mintSign.ExpiredAt, mintSign.SignRole)
}

func TestUpdateSubAccountTx2(t *testing.T) {
	dc, err := getNewDasCoreTestnet2()
	if err != nil {
		t.Fatal(err)
	}
	hash := "0xdc85e488f3f2d53a3dafe590ed1b0773c9a745172a7ba2f1c4f95e94d4b7e6ef"
	if res, err := dc.Client().GetTransaction(context.Background(), types.HexToHash(hash)); err != nil {
		t.Fatal(err)
	} else {
		var sanb witness.SubAccountNewBuilder
		resMap, err := sanb.SubAccountNewMapFromTx(res.Transaction)
		if err != nil {
			t.Fatal(err)
		}
		for _, v := range resMap {
			fmt.Println(v.Account, v.SignExpiredAt, v.Action)
		}
	}
}
